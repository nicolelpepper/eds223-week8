---
output: html_document
editor_options: 
  chunk_output_type: console
---


```{r}
# ---- Load libraries ----
# Load libraries
library(terra) # raster data
library(sf) # vector data
library(tidyverse)
library(here)
library(tmap)

```

# Create NDVI function
Best practice to set up functions in separate doc or up top
#### I should set up my hw function in a separate doc
#### And this is also helpful for HW4:
`ndvi_20180612 <- lapp(landsat_20180612[[c(4, 3)]], fun = ndvi_fun)`
```{r}
# Create function to compute NDVI
ndvi_fun <- function(nir, red){
  (nir - red) / (nir + red)
}
```


```{r}
# ---- Compute NDVI for one scene ----

# Read in data
landsat_20180612 <- rast(here("data", "landsat_20180612.tif"))

# Rename band names
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")

# Apply function to multiple layers
# NIR = 4 and red = 3 index
ndvi_20180612 <- lapp(landsat_20180612[[c(4,3)]], fun = ndvi_fun)


# Read in study sites
sites <- st_read(here::here("data/study_sites.shp"))
```


```{r}
tm_shape(ndvi_20180612) + 
  tm_raster(title = "NDVI") + 
  tm_layout(legend.outside = TRUE)
```


create_ndvi_layer <- function(i) {
  
  # step 1: read in landsat scene
  landsat <- terra::rast(files[i])
  
  # step 2: rename/update names of bands in scene
  names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
  
  # compute 3: NDVI
  ndvi <- lapply(landsat[[4,3]], fun = ndvi_fun)

  return(ndvi)
}
```{r}
# ---- Compute NDVI for all scenes ----

create_ndvi_layer <- function(i){
  landsat <- rast(files[i])
  names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
  ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
  return(ndvi)
}

```


```{r}

# Read in landsat data
files <- list.files(here("data"), 
                    pattern = "*.tif",
                    full.names = TRUE)

landsat_stack <- lapply(files, rast) %>% rast()
```

file_names <- data.frame(file_name = files) %>%
  mutate(date = str_match(file_name, "(_)[](.tif)"))
  
```{r}
all_ndvi <- c(create_ndvi_layer(1), 
              create_ndvi_layer(2), 
              create_ndvi_layer(3), 
              create_ndvi_layer(4), 
              create_ndvi_layer(5), 
              create_ndvi_layer(6), 
              create_ndvi_layer(7), 
              create_ndvi_layer(8))

file_names <- data.frame(file_name = files) %>%
  mutate(date = str_sub(file_name, start = -12, end = -5L))

names(all_ndvi) <- file_names$date

```

```{r}
tm_shape(all_ndvi[[1]]) + 
  tm_raster() +
  tm_shape(sites) + 
  tm_polygons()

```



```{r}

sites_ndvi <- terra::extract(all_ndvi, sites, fun = "mean")

sites_annotated <- cbind(sites, sites_ndvi)

```

```{r}
sites_clean <- sites_annotated %>%
  # initial cleaning
  st_drop_geometry() %>% # drop geometry 
  select(-ID) %>% # remove ID generated by terra::extract()
  # reformat data frame
  pivot_longer(!study_site) %>% # reshape data frame
  rename("NDVI" = value) %>% # assign "value" to NDVI
  # create date attribute
  mutate("year" = str_sub(name, 2, 5), # pull out elements of date
         "month" = str_sub(name, 7, 8),
         "day" = str_sub(name, -2, -1)) %>%
  unite("date", 4:6, sep = "-") %>% # combine date elements
  mutate("date" = lubridate::as_date(date)) %>% # use lubridate to set as date time object
  # rename combine study sites by vegetation type
  mutate("veg_type" = case_when(study_site == "forest1" ~ "forest",
                                study_site == "forest2" ~ "forest",
                                study_site == "forest3" ~ "forest",
                                study_site == "grassland" ~ "grassland",
                                study_site == "chaparral" ~ "chaparral")) %>%
  # summarize results by vegetation type
  group_by(veg_type, date) %>%
  summarize("NDVI" = mean(NDVI, na.rm = TRUE))
```

```{r}
ggplot(sites_clean,
       aes(x = date, y = NDVI,
           group = veg_type, col = veg_type)) +
  scale_color_manual(values = c("#EAAC8B", "#315C2B","#9EA93F")) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  labs(x = "", y = "Normalized Difference Vegetation Index (NDVI)", col = "Vegetation type",
       title = "Seasonal cycles of vegetation productivity") 
```

x = time y = NDVI 

